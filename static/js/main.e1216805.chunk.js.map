{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authAction.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","e","preventDefault","getState","_ref2","getFirebase","auth","then","type","props","initials","profile","react_default","a","createElement","className","es_NavLink","to","href","onClick","SignOutLink","state","firebase","NavLink","uid","layout_SignInLink","layout_SignOutLink","Link","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","startOf","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","_this","setState","Object","defineProperty","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1216805.chunk.js","sourcesContent":["import React from 'react';\n\n// react-router\nimport { NavLink } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// actions\nimport { signOut } from '../../store/actions/authAction';\n\nconst SignInLink = (props) => {\n  const { initials } = props.profile;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to='/create'>New Project</NavLink>\n      </li>\n      <li>\n        <a href=\"/\" onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to='/' className=\"btn btn-floating pink lighten-1\">{ initials }</NavLink>\n      </li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: (e) => {\n      e.preventDefault();\n      return dispatch(signOut());\n    },\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignInLink);","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch(error => {\n      dispatch({ type: 'LOGIN_ERROR', error });\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'LOGOUT_SUCCESS' });\n    })\n  }\n}\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password,\n    ).then(res => {\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0],\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch(error => {\n      dispatch({ type: 'SIGNUP_ERROR', error });\n    })\n  }\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignOutLink = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignOutLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// components\nimport SignInLink from './SignInLink';\nimport SignOutLink from './SignOutLink';\n\n// Redux\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const NavLink = auth.uid ? <SignInLink profile={profile} /> : <SignOutLink />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        { NavLink }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n\n// moment\nimport moment from 'moment';\n\nconst Notification = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notification\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={ item.id }>\n                  <span className=\"pink-text\">{ item.user }</span>\n                  <span> { item.content }</span>\n                  <div className=\"grey-text note-date\">\n                    { moment(item.time.toDate()).startOf().fromNow() }\n                  </div>\n                </li>\n              )\n            }) }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\n// moment\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{ project.title }</span>\n        <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n        <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary;","import React from 'react';\n\n// component\nimport ProjectSummary from './ProjectSummary';\n\n// Router\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={ `/project/${project.id}` } key={ project.id }>\n            <ProjectSummary project={ project } />\n          </Link>\n        )\n      }) }\n    </div>\n  )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\n\n// components\nimport Notification from './Notification';\nimport ProjectList from '../projects/ProjectList';\n\n// react-router\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\n// redux-firebase\nimport { firestoreConnect } from 'react-redux-firebase';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to='/signin' />\n    }\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={ projects } />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notification notifications={ notifications } />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] },\n  ])\n)(Dashboard);","import React from 'react'\n\n// react-router\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\n// firebase\nimport { firestoreConnect } from 'react-redux-firebase';\n\n// moment\nimport moment from 'moment';\n\nconst ProjectDetail = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) {\n    return <Redirect to='/signin' />\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{ moment(project.createdAt.toDate()).startOf().fromNow() }</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  const { projects } = state.firestore.data;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' },\n  ])\n)(ProjectDetail);","import React, { Component } from 'react';\n\n// react-router\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// actions\nimport { signIn } from '../../store/actions/authAction';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to='/' />\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\n\n// react-router\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// action\nimport { signUp } from '../../store/actions/authAction';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to='/' />\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">LastName</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">FirstName</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from \"react\";\n\n// react-router\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// action\nimport { createProject } from '../../store/actions/projectAction';\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to='/signin' />\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const { profile } = getState().firebase;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date(),\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch(error => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', error });\n    })\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// components\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetail from './components/projects/ProjectDetail';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetail} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null,\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log('Login success');\n      return {\n        ...state,\n        authError: null,\n      };\n    case 'LOGIN_ERROR':\n      console.log('Login failed');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGOUT_SUCCESS':\n      console.log('Log out success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null,\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.error.message,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","const initState = {\n  projects: [\n    {\n      id: '1',\n      title: 'Chrissy Costanza',\n      content: 'Lead vocals of Against The Current'\n    },\n    {\n      id: '2',\n      title: 'Will Ferri',\n      content: 'Drums of Against The Current'\n    },\n    {\n      id: '3',\n      title: 'Dan Gow',\n      content: 'Lead guitar of Against The Current'\n    },\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log(action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log(action.error);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import { combineReducers } from \"redux\";\n\n// Reducers\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\n// firebase\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyCEAis6w5LxaHszfyPc7oozUdfOMQSRTwU\",\n  authDomain: \"marioplan-3f0e0.firebaseapp.com\",\n  databaseURL: \"https://marioplan-3f0e0.firebaseio.com\",\n  projectId: \"marioplan-3f0e0\",\n  storageBucket: \"marioplan-3f0e0.appspot.com\",\n  messagingSenderId: \"416501833749\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Reducers\nimport rootReducer from './store/reducers/rootReducer';\n\n// middleware\nimport thunk from 'redux-thunk';\n\n// firebase\nimport fbConfig from './config/fbConfig';\n\n// redux-firebase\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase ,getFirebase } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})"],"sourceRoot":""}